# -*- coding: utf-8 -*-
"""Send emails automatically

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wMmLTLCWp_3hNc-oPutSi9-ar-gFSvNx

Send emails automatically
"""

#1) Abrir o Jupyter no PC, aguardar ele abrir uma janela no Chrome. No Chrome aparece as pastas do PC
#2) Criar uma nova pasta para trabalhar

pyautogui: biblioteca de automação de comandos do mouse e teclado
Comandos pyautogui = http://pyautogui.readthedocs.io/en/latest/quickstart.html

#1) Abrir Jupyter, intalar: pip install pyautogui. Só precisa fazer isso 1 única vez
import pyautogui 
import pyperclip	#sempre importar esse com o pyautogui, porque eles atuam juntos. Quando instala o pyautogui, já é instalado o pyperclip
import time 
import pandas as pd	#o "as pd" é para abreviar a biblioteca para qnd for usar só escrever pd

#2) Escrever os passos que fariamos a mão para manipular os dados. Isso ajuda a pensar nos códigos e no que fazer:

#3) Transformar o que queremos em códigos


#Passo 1: entrar no nosso sistema - https://drive.google.com/drive/folders/149xknr9JvrlEnhNWO49zPcw0PW5icxga?usp=sharing
pyautogui.PAUSE = 1		#As vezes da erro o código porque vai muito rápido e o PC não consegue "raciocionar direito". Tem que pedir para o código dar alguns segundos entre comandos

pyautogui.hotkey('ctrl', 't') #Atalho de combinação de tecla para abrir nova aba do chrome

#Criar variável Link e armazenar o link do que queremos. Se tiver mais de um link, separar de alguma forma
link = 'https://drive.google.com/drive/folders/149xknr9JvrlEnhNWO49zPcw0PW5icxga?usp=sharing'
pyperclip.copy('link')	#O pyautogui não lê caractere, ele não consegue rodar quando tem. Isso pode causar problema caso entre em algum site ou alguma frase com caractere. Para isso podemos pedir para a biblioteca pyperclip copiar e colar o que queremos
##no exemplo da aula, o link que ele tenta abrir abaixo tem um ? no meio, e por isso não abre.

pyautogui.hotkey('ctrl', 'v')	#Para colar o Link que foi copiado,

#OU
# pyautogui.press('win')	#Para pressionar uma tecla (win é de windowns #Abrir o programa do PC (press para apertar botão do teclado)
# pyautogui.write('chrome')	#Para o programa escrever
# pyautogui.press('enter')
##fazer o mesmo código que anteriormente

#Passo 2: Entrar na pasta "exportar"
#Para clicar em algum local na tela, precisa saber exatamente em que posição da tela (x,y) para clicar
time.sleep(5)	
pyautogui.position()	#Rodar APENAS essas 2 linhas separadas, e quando rodar, abrir na pag que quer descobrir a localização, e colocar o mouse sobre o botão que quer clicar. Assim, no tempo determinado, ele vai rodar o position()
##Só precisa disso 1x para ver a posição do botão.

time.sleep(5) 		#espera 5seg (uma vez) para o site carregar direito
pyautogui.click(x=478, y=317)	#por padrão isso clica uma única vez
pyautogui.click(x=478, y=317, clicks=2) #agora irá clicar 2x	
##se quiser com botão direto, colocar após a posição (..., button='right')

#Passo 3: Baixar o arquivo da pasta, "arquivo de vendas"
Queremos baixar o arquivo, para isso, quando tiver dentro da pasta, iremos pedir para esperar alguns segundos para carregar a pag. E terá pelo menos 3 clicks (clicar no arquivo, clicar nos 3 pontinhos, clicar em download)
##Localizar cada botão
time.sleep(5)
pyautogui.position()
###fazer isso para cada parte que deverá ser clicado e salvar a posição

time.sleep (3)
pyautogui.click(x=478, y=317)	#para 1° click
pyautogui.click(x=478, y=317)	#para 2° click
pyautogui.click(x=478, y=317)	#para 3° click
time.sleep (10)	#para esperar fazer o download

#Passo 4: Importar arquivo
##Com botão direito do mouse, no arquivo que está no PC, clicar em propriedades para achar em que local do PC está o arquivo que queremos importar

tabela = pd.read_excel(r'C:\Users\Gabriela\Downloads\Curso Python\Hashtag\Aula1\Vendas -Dez.xlsx')
##o "r" antes do C: faz com que o diretório seja lido exatamente como está, é uma dica
tabela.head()
display(tabela)	#mostra a tabela formatada bonitinha

#Passo 5: O que precisa ser manipulado: calcular faturamento e qnt de prod vendidos
faturamento = tabela['Valor Final'].sum() 
quantidade = tabela['Quantidade'].sum
print(faturamento)
print(quantidade)

#Passo 6: Enviar email
link2 = 'https://outlook.live.com/mail/0/inbox'
pyperclip.copy(link2)
pyautogui.hotkey('ctrl', 't')
pyautogui.write('crtk', 'v')
pyautogui.press('enter')

time.sleep (3)

#clicar botão nova mensagem
pyautogui.click(x=478, y=317)	#para 1° click no "nova mensagem"
#escrever pra quem estou enviando
pyautogui.write('')
pyautogui.press('tab')	#para selecionar o email que escreveu
pyautogui.press('tab')	#para ir para o assunto

#escrever assunto
pyautogui.write('')
pyautogui.press('tab')
pyautogui.press('tab')
pyautogui.press('tab')	#para ir para o corpo do email
#obs: se tiver caractere especial, precisa colocar o texto em variavel:
#> assunto = "Relatório"
#> pyperclip.copy(assunto)
#> pyautogui.hotkey('ctrl','v')
#> pyautogui.press('tab')

#escrever corpo do email
texto = f"""
textotextotexto textotexto {variável que queremos colocar:,.2f}
texto texto texto {outra variável:,.2f}

Abraços,
Gabriela C.
"""
##as 3 aspas seguidas permite escrever em várias linhas, e a letra f antes da aspas informa que vamos formartar o texto. Já as chaves {} permite colocar a variavel que queremos formatar dentro do texto. Se colocar : após a variavel, é para editar aquela variavel naquele momento, ex quando precisar mudar n°. A virgula é o separador de milhar, ".2f" é para dizer que tem 2 casas decimais.
pyautogui.write(texto)

#enviar email
pyautogui.click(x=478, y=317)	#para 2° click	#clicar em enviar

import pyautogui
import pyperclip
import time
import pandas as pd

#time.sleep(5)
#pyautogui.position()

pyautogui.PAUSE = 1

pyautogui.hotkey('ctrl','t')
link1= 'https://outlook.live.com/mail/0/inbox'
pyperclip.copy(link1)
pyautogui.hotkey('ctrl', 'v')
pyautogui.press('enter')

time.sleep (3)

pyautogui.click(x=205, y=213)

time.sleep (5)

texto1 = 'gabrielacruzp@hotmail.com'
pyperclip.copy(texto1)

pyautogui.hotkey('ctrl','v')
pyautogui.press('tab')
pyautogui.press('tab')
pyautogui.press('tab')

assunto = 'Recado de Paçoca Paiva'
pyperclip.copy(assunto)
pyautogui.hotkey('ctrl', 'v')
pyautogui.press('tab')

texto2 = """

"""
pyperclip.copy(texto2)
pyautogui.hotkey('ctrl','v')

pyautogui.click(x=327, y=769)